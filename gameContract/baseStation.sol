
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;


import 'gameObject.Sol';

contract baseStation is gameObject{

    gameObject[] private units;// хранения списка юнитов
    int private defensePower = 10; // хранения защиты
    
    constructor() public override{
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        defensePower = 10;
        tvm.accept();
    }
    // добавить юнита
    function addUnit(gameObject unit) public{
        tvm.accept();
        units.push(unit);
    }

    // удалить юнита
    function delUnit(gameObject unit) external{
        tvm.accept();
        bool done = true;
        for(uint i = 0; i < units.length || done;i++){
            if(units[i]==unit){
                delete units[i];
                done = false;
            }
        }
    }

    // получить всех юнитов базы
    function getUnit() public view returns (gameObject[]){
        tvm.accept();
       return units;
    }

    // получить значение защиты
    function getDefenseValue() external view returns (int){
        tvm.accept();
        return defensePower;
    }

    // уничтожить всех юнитов
    function checkAlive()  public override{
        tvm.accept();
        if(getHealth()<=0){//если жизнь 0<=, то уничтожаем 
            for(uint i = 0; i<units.length; i++){
                units[i].sendTransactioAndDestroyWallet(units[i]);
            }
            delete units;
            sendTransactioAndDestroyWallet(msg.sender);
        }
    }
    
}
